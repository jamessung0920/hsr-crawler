version: "3.9" 
services:
  crawler:
    build:
      context: .
      dockerfile: ./docker_services/crawler/Dockerfile
    volumes:
      - ./src:/app/src
      - ./package.json:/app/package.json
      - ./package-lock.json:/app/package-lock.json
      - logvolume01:/var/log
    links:
      - redis
      - postgres
      - captchaSolver
    command: npm run start-crawler
    env_file: .env
    security_opt:
      - seccomp=./chrome.json
  webhook:
    build:
      context: .
      dockerfile: ./docker_services/webhook/Dockerfile
    ports:
      - "23580:3000"
      - "9229:9229"
    volumes:
      - ./src:/app/src
      - ./migrations:/app/migrations
      - ./package.json:/app/package.json
      - ./package-lock.json:/app/package-lock.json
      - logvolume02:/var/log
    links:
      - redis
      - postgres
    command: sh -c "sleep 5 && npm run migrate up && npm run start-webhook"
    env_file: .env
  redis:
    image: redis:6.2.6-alpine
    volumes:
      - ./redis.conf:/var/lib/redis/redis.conf
      - redis_data:/var/lib/redis
    command: sh -c "redis-server /var/lib/redis/redis.conf"
  postgres:
    image: postgres:14-alpine
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  captchaSolver:
    image: ocr_server:v1
    ports:
      - "9898:9898"
volumes:
  logvolume01: {}
  logvolume02: {}
  postgres_data:
  redis_data: